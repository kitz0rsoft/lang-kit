diff -urN dart-2.3.2/dart/build/config/compiler/BUILD.gn dart-2.3.2-patched/dart/build/config/compiler/BUILD.gn
--- dart-2.3.2/dart/build/config/compiler/BUILD.gn	2019-06-11 07:32:42.000000000 -0600
+++ dart-2.3.2-patched/dart/build/config/compiler/BUILD.gn	2019-06-21 17:40:15.175235807 -0600
@@ -347,17 +347,17 @@
   # changes since artifacts from an older version of the toolchain may or may
   # not be compatible with newer ones. To achieve this, we insert a synthetic
   # define into the compile line.
-  if (is_clang && (is_linux || is_mac)) {
-    if (is_linux) {
-      toolchain_stamp_file =
-          "//buildtools/linux-x64/clang/.versions/clang.cipd_version"
-    } else {
-      toolchain_stamp_file =
-          "//buildtools/mac-x64/clang/.versions/clang.cipd_version"
-    }
-    cipd_version = read_file(toolchain_stamp_file, "json")
-    defines = [ "TOOLCHAIN_VERSION=${cipd_version.instance_id}" ]
-  }
+#  if (is_clang && (is_linux || is_mac)) {
+#    if (is_linux) {
+#      toolchain_stamp_file =
+#          "//buildtools/linux-x64/clang/.versions/clang.cipd_version"
+#    } else {
+#      toolchain_stamp_file =
+#          "//buildtools/mac-x64/clang/.versions/clang.cipd_version"
+#    }
+#    cipd_version = read_file(toolchain_stamp_file, "json")
+#    defines = [ "TOOLCHAIN_VERSION=${cipd_version.instance_id}" ]
+#  }
 
   # Assign any flags set for the C compiler to asmflags so that they are sent
   # to the assembler. The Windows assembler takes different types of flags
@@ -711,7 +711,7 @@
     if (is_clang && !using_sanitizer) {
       # Identical code folding to reduce size.
       # Warning: This changes C/C++ semantics of function pointer comparison.
-      common_optimize_on_ldflags += [ "-Wl,--icf=all" ]
+      # common_optimize_on_ldflags += [ "-Wl,--icf=all" ]
     }
 
     if (!using_sanitizer) {
diff -urN dart-2.3.2/dart/build/toolchain/linux/BUILD.gn dart-2.3.2-patched/dart/build/toolchain/linux/BUILD.gn
--- dart-2.3.2/dart/build/toolchain/linux/BUILD.gn	2019-06-11 07:32:42.000000000 -0600
+++ dart-2.3.2-patched/dart/build/toolchain/linux/BUILD.gn	2019-06-21 17:45:07.386822400 -0600
@@ -9,6 +9,7 @@
 
 declare_args() {
   toolchain_prefix = ""
+  llvm_prefix = ""
   # TODO(zra): Add an argument for overriding the host toolchain.
 }
 
@@ -42,15 +43,14 @@
 }
 
 gcc_toolchain("clang_arm") {
-  prefix = rebase_path("//buildtools/linux-x64/clang/bin", root_build_dir)
-  cc = "${compiler_prefix}${prefix}/clang"
-  cxx = "${compiler_prefix}${prefix}/clang++"
-
-  readelf = "${prefix}/llvm-readelf"
-  nm = "${prefix}/llvm-nm"
-  ar = "${prefix}/llvm-ar"
+  cc = "${llvm_prefix}/bin/clang"
+  cxx = "${llvm_prefix}/bin/clang++"
+
+  readelf = "${llvm_prefix}/bin/llvm-readelf"
+  nm = "${llvm_prefix}/bin/llvm-nm"
+  ar = "${llvm_prefix}/bin/llvm-ar"
   ld = cxx
-  llvm_objcopy = "${prefix}/llvm-objcopy"
+  llvm_objcopy = "${llvm_prefix}/bin/llvm-objcopy"
 
   toolchain_cpu = "arm"
   toolchain_os = "linux"
@@ -78,15 +78,14 @@
 }
 
 gcc_toolchain("clang_arm64") {
-  prefix = rebase_path("//buildtools/linux-x64/clang/bin", root_build_dir)
-  cc = "${compiler_prefix}${prefix}/clang"
-  cxx = "${compiler_prefix}${prefix}/clang++"
-
-  readelf = "readelf"
-  nm = "${prefix}/llvm-nm"
-  ar = "${prefix}/llvm-ar"
+  cc = "${llvm_prefix}/bin/clang"
+  cxx = "${llvm_prefix}/bin/clang++"
+
+  readelf = "${llvm_prefix}/bin/llvm-readelf"
+  nm = "${llvm_prefix}/bin/llvm-nm"
+  ar = "${llvm_prefix}/bin/llvm-ar"
   ld = cxx
-  llvm_objcopy = "${prefix}/llvm-objcopy"
+  llvm_objcopy = "${llvm_prefix}/bin/llvm-objcopy"
 
   toolchain_cpu = "arm64"
   toolchain_os = "linux"
@@ -94,15 +93,14 @@
 }
 
 gcc_toolchain("clang_x86") {
-  prefix = rebase_path("//buildtools/linux-x64/clang/bin", root_build_dir)
-  cc = "${compiler_prefix}${prefix}/clang"
-  cxx = "${compiler_prefix}${prefix}/clang++"
-
-  readelf = "${prefix}/llvm-readelf"
-  nm = "${prefix}/llvm-nm"
-  ar = "${prefix}/llvm-ar"
+  cc = "${llvm_prefix}/bin/clang"
+  cxx = "${llvm_prefix}/bin/clang++"
+
+  readelf = "${llvm_prefix}/bin/llvm-readelf"
+  nm = "${llvm_prefix}/bin/llvm-nm"
+  ar = "${llvm_prefix}/bin/llvm-ar"
   ld = cxx
-  llvm_objcopy = "${prefix}/llvm-objcopy"
+  llvm_objcopy = "${llvm_prefix}/bin/llvm-objcopy"
 
   toolchain_cpu = "x86"
   toolchain_os = "linux"
@@ -126,15 +124,14 @@
 }
 
 gcc_toolchain("clang_x64") {
-  prefix = rebase_path("//buildtools/linux-x64/clang/bin", root_build_dir)
-  cc = "${compiler_prefix}${prefix}/clang"
-  cxx = "${compiler_prefix}${prefix}/clang++"
-
-  readelf = "${prefix}/llvm-readelf"
-  nm = "${prefix}/llvm-nm"
-  ar = "${prefix}/llvm-ar"
+  cc = "${llvm_prefix}/bin/clang"
+  cxx = "${llvm_prefix}/bin/clang++"
+
+  readelf = "${llvm_prefix}/bin/llvm-readelf"
+  nm = "${llvm_prefix}/bin/llvm-nm"
+  ar = "${llvm_prefix}/bin/llvm-ar"
   ld = cxx
-  llvm_objcopy = "${prefix}/llvm-objcopy"
+  llvm_objcopy = "${llvm_prefix}/bin/llvm-objcopy"
 
   toolchain_cpu = "x64"
   toolchain_os = "linux"
